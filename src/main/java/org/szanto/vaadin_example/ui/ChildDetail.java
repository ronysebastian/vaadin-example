package org.szanto.vaadin_example.ui;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

public class ChildDetail extends CustomComponent {

	@AutoGenerated
	private GridLayout mainLayout;

	@AutoGenerated
	private PopupDateField popupDateField_1;

	@AutoGenerated
	private OptionGroup optionGroupGender;

	@AutoGenerated
	private TextField textFieldName;

	@AutoGenerated
	private Button buttonRemove;

	@AutoGenerated
	private Label label_1;

	@AutoGenerated
	private Label labelGender;

	@AutoGenerated
	private Label labelName;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 7516206572665685523L;
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ChildDetail() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		optionGroupGender.addItem("Boy");
		optionGroupGender.addItem("Girl");

	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setColumns(4);
		mainLayout.setRows(2);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// labelName
		labelName = new Label();
		labelName.setImmediate(false);
		labelName.setWidth("-1px");
		labelName.setHeight("-1px");
		labelName.setValue("Name");
		mainLayout.addComponent(labelName, 0, 0);
		
		// labelGender
		labelGender = new Label();
		labelGender.setImmediate(false);
		labelGender.setWidth("-1px");
		labelGender.setHeight("-1px");
		labelGender.setValue("Gender");
		mainLayout.addComponent(labelGender, 1, 0);
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Date of Birth");
		mainLayout.addComponent(label_1, 2, 0);
		
		// buttonRemove
		buttonRemove = new Button();
		buttonRemove.setCaption("Remove this child");
		buttonRemove.setImmediate(true);
		buttonRemove.setWidth("-1px");
		buttonRemove.setHeight("-1px");
		mainLayout.addComponent(buttonRemove, 3, 0);
		
		// textFieldName
		textFieldName = new TextField();
		textFieldName.setImmediate(false);
		textFieldName.setWidth("-1px");
		textFieldName.setHeight("-1px");
		textFieldName.setRequired(true);
		textFieldName.setSecret(false);
		mainLayout.addComponent(textFieldName, 0, 1);
		
		// optionGroupGender
		optionGroupGender = new OptionGroup();
		optionGroupGender.setImmediate(false);
		optionGroupGender.setWidth("-1px");
		optionGroupGender.setHeight("-1px");
		optionGroupGender.setRequired(true);
		mainLayout.addComponent(optionGroupGender, 1, 1);
		
		// popupDateField_1
		popupDateField_1 = new PopupDateField();
		popupDateField_1.setImmediate(false);
		popupDateField_1.setWidth("-1px");
		popupDateField_1.setHeight("-1px");
		popupDateField_1.setInvalidAllowed(false);
		mainLayout.addComponent(popupDateField_1, 2, 1);
		
		return mainLayout;
	}

}
